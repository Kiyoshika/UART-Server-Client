ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 1


   1              		.cpu cortex-m4
   2              		.arch armv7e-m
   3              		.fpu fpv4-sp-d16
   4              		.eabi_attribute 27, 1
   5              		.eabi_attribute 28, 1
   6              		.eabi_attribute 20, 1
   7              		.eabi_attribute 21, 1
   8              		.eabi_attribute 23, 3
   9              		.eabi_attribute 24, 1
  10              		.eabi_attribute 25, 1
  11              		.eabi_attribute 26, 1
  12              		.eabi_attribute 30, 6
  13              		.eabi_attribute 34, 1
  14              		.eabi_attribute 18, 4
  15              		.file	"system_stm32wbxx.c"
  16              		.text
  17              	.Ltext0:
  18              		.cfi_sections	.debug_frame
  19              		.global	SystemCoreClock
  20              		.section	.data.SystemCoreClock,"aw"
  21              		.align	2
  24              	SystemCoreClock:
  25 0000 00093D00 		.word	4000000
  26              		.global	AHBPrescTable
  27              		.section	.rodata.AHBPrescTable,"a"
  28              		.align	2
  31              	AHBPrescTable:
  32 0000 01000000 		.word	1
  33 0004 03000000 		.word	3
  34 0008 05000000 		.word	5
  35 000c 01000000 		.word	1
  36 0010 01000000 		.word	1
  37 0014 06000000 		.word	6
  38 0018 0A000000 		.word	10
  39 001c 20000000 		.word	32
  40 0020 02000000 		.word	2
  41 0024 04000000 		.word	4
  42 0028 08000000 		.word	8
  43 002c 10000000 		.word	16
  44 0030 40000000 		.word	64
  45 0034 80000000 		.word	128
  46 0038 00010000 		.word	256
  47 003c 00020000 		.word	512
  48              		.global	APBPrescTable
  49              		.section	.rodata.APBPrescTable,"a"
  50              		.align	2
  53              	APBPrescTable:
  54 0000 00000000 		.word	0
  55 0004 00000000 		.word	0
  56 0008 00000000 		.word	0
  57 000c 00000000 		.word	0
  58 0010 01000000 		.word	1
  59 0014 02000000 		.word	2
  60 0018 03000000 		.word	3
  61 001c 04000000 		.word	4
  62              		.global	MSIRangeTable
  63              		.section	.rodata.MSIRangeTable,"a"
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 2


  64              		.align	2
  67              	MSIRangeTable:
  68 0000 A0860100 		.word	100000
  69 0004 400D0300 		.word	200000
  70 0008 801A0600 		.word	400000
  71 000c 00350C00 		.word	800000
  72 0010 40420F00 		.word	1000000
  73 0014 80841E00 		.word	2000000
  74 0018 00093D00 		.word	4000000
  75 001c 00127A00 		.word	8000000
  76 0020 0024F400 		.word	16000000
  77 0024 00366E01 		.word	24000000
  78 0028 0048E801 		.word	32000000
  79 002c 006CDC02 		.word	48000000
  80 0030 00000000 		.word	0
  81 0034 00000000 		.word	0
  82 0038 00000000 		.word	0
  83 003c 00000000 		.word	0
  84              		.global	SmpsPrescalerTable
  85              		.section	.rodata.SmpsPrescalerTable,"a"
  86              		.align	2
  89              	SmpsPrescalerTable:
  90 0000 01000000 		.word	1
  91 0004 03000000 		.word	3
  92 0008 02000000 		.word	2
  93 000c 02000000 		.word	2
  94 0010 01000000 		.word	1
  95 0014 02000000 		.word	2
  96 0018 02000000 		.word	2
  97 001c 06000000 		.word	6
  98 0020 04000000 		.word	4
  99 0024 03000000 		.word	3
 100 0028 02000000 		.word	2
 101 002c 04000000 		.word	4
 102 0030 04000000 		.word	4
 103 0034 0C000000 		.word	12
 104 0038 08000000 		.word	8
 105 003c 06000000 		.word	6
 106 0040 04000000 		.word	4
 107 0044 08000000 		.word	8
 108 0048 04000000 		.word	4
 109 004c 0C000000 		.word	12
 110 0050 08000000 		.word	8
 111 0054 06000000 		.word	6
 112 0058 04000000 		.word	4
 113 005c 08000000 		.word	8
 114              		.section	.text.SystemInit,"ax",%progbits
 115              		.align	1
 116              		.global	SystemInit
 117              		.syntax unified
 118              		.thumb
 119              		.thumb_func
 121              	SystemInit:
 122              	.LFB132:
 123              		.file 1 "Core/Src/system_stm32wbxx.c"
   1:Core/Src/system_stm32wbxx.c **** /**
   2:Core/Src/system_stm32wbxx.c ****   ******************************************************************************
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 3


   3:Core/Src/system_stm32wbxx.c ****   * @file    system_stm32wbxx.c
   4:Core/Src/system_stm32wbxx.c ****   * @author  MCD Application Team
   5:Core/Src/system_stm32wbxx.c ****   * @brief   CMSIS Cortex Device Peripheral Access Layer System Source File
   6:Core/Src/system_stm32wbxx.c ****   *
   7:Core/Src/system_stm32wbxx.c ****   *   This file provides two functions and one global variable to be called from
   8:Core/Src/system_stm32wbxx.c ****   *   user application:
   9:Core/Src/system_stm32wbxx.c ****   *      - SystemInit(): This function is called at startup just after reset and
  10:Core/Src/system_stm32wbxx.c ****   *                      before branch to main program. This call is made inside
  11:Core/Src/system_stm32wbxx.c ****   *                      the "startup_stm32wbxx.s" file.
  12:Core/Src/system_stm32wbxx.c ****   *
  13:Core/Src/system_stm32wbxx.c ****   *      - SystemCoreClock variable: Contains the core clock (HCLK), it can be used
  14:Core/Src/system_stm32wbxx.c ****   *                                  by the user application to setup the SysTick
  15:Core/Src/system_stm32wbxx.c ****   *                                  timer or configure other parameters.
  16:Core/Src/system_stm32wbxx.c ****   *
  17:Core/Src/system_stm32wbxx.c ****   *      - SystemCoreClockUpdate(): Updates the variable SystemCoreClock and must
  18:Core/Src/system_stm32wbxx.c ****   *                                 be called whenever the core clock is changed
  19:Core/Src/system_stm32wbxx.c ****   *                                 during program execution.
  20:Core/Src/system_stm32wbxx.c ****   *
  21:Core/Src/system_stm32wbxx.c ****   *   After each device reset the MSI (4 MHz) is used as system clock source.
  22:Core/Src/system_stm32wbxx.c ****   *   Then SystemInit() function is called, in "startup_stm32wbxx.s" file, to
  23:Core/Src/system_stm32wbxx.c ****   *   configure the system clock before to branch to main program.
  24:Core/Src/system_stm32wbxx.c ****   *
  25:Core/Src/system_stm32wbxx.c ****   *   This file configures the system clock as follows:
  26:Core/Src/system_stm32wbxx.c ****   *=============================================================================
  27:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  28:Core/Src/system_stm32wbxx.c ****   *        System Clock source                    | MSI
  29:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  30:Core/Src/system_stm32wbxx.c ****   *        SYSCLK(Hz)                             | 4000000
  31:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  32:Core/Src/system_stm32wbxx.c ****   *        HCLK(Hz)                               | 4000000
  33:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  34:Core/Src/system_stm32wbxx.c ****   *        AHB Prescaler                          | 1
  35:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  36:Core/Src/system_stm32wbxx.c ****   *        APB1 Prescaler                         | 1
  37:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  38:Core/Src/system_stm32wbxx.c ****   *        APB2 Prescaler                         | 1
  39:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  40:Core/Src/system_stm32wbxx.c ****   *        PLL_M                                  | 1
  41:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  42:Core/Src/system_stm32wbxx.c ****   *        PLL_N                                  | 8
  43:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  44:Core/Src/system_stm32wbxx.c ****   *        PLL_P                                  | 7
  45:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  46:Core/Src/system_stm32wbxx.c ****   *        PLL_Q                                  | 2
  47:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  48:Core/Src/system_stm32wbxx.c ****   *        PLL_R                                  | 2
  49:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  50:Core/Src/system_stm32wbxx.c ****   *        PLLSAI1_P                              | NA
  51:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  52:Core/Src/system_stm32wbxx.c ****   *        PLLSAI1_Q                              | NA
  53:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  54:Core/Src/system_stm32wbxx.c ****   *        PLLSAI1_R                              | NA
  55:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  56:Core/Src/system_stm32wbxx.c ****   *        Require 48MHz for USB OTG FS,          | Disabled
  57:Core/Src/system_stm32wbxx.c ****   *        SDIO and RNG clock                     |
  58:Core/Src/system_stm32wbxx.c ****   *-----------------------------------------------------------------------------
  59:Core/Src/system_stm32wbxx.c ****   *=============================================================================
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 4


  60:Core/Src/system_stm32wbxx.c ****   ******************************************************************************
  61:Core/Src/system_stm32wbxx.c ****   * @attention
  62:Core/Src/system_stm32wbxx.c ****   *
  63:Core/Src/system_stm32wbxx.c ****   * Copyright (c) 2019-2021 STMicroelectronics.
  64:Core/Src/system_stm32wbxx.c ****   * All rights reserved.
  65:Core/Src/system_stm32wbxx.c ****   *
  66:Core/Src/system_stm32wbxx.c ****   * This software is licensed under terms that can be found in the LICENSE file
  67:Core/Src/system_stm32wbxx.c ****   * in the root directory of this software component.
  68:Core/Src/system_stm32wbxx.c ****   * If no LICENSE file comes with this software, it is provided AS-IS.
  69:Core/Src/system_stm32wbxx.c ****   *
  70:Core/Src/system_stm32wbxx.c ****   ******************************************************************************
  71:Core/Src/system_stm32wbxx.c ****   */
  72:Core/Src/system_stm32wbxx.c **** 
  73:Core/Src/system_stm32wbxx.c **** /** @addtogroup CMSIS
  74:Core/Src/system_stm32wbxx.c ****   * @{
  75:Core/Src/system_stm32wbxx.c ****   */
  76:Core/Src/system_stm32wbxx.c **** 
  77:Core/Src/system_stm32wbxx.c **** /** @addtogroup stm32WBxx_system
  78:Core/Src/system_stm32wbxx.c ****   * @{
  79:Core/Src/system_stm32wbxx.c ****   */
  80:Core/Src/system_stm32wbxx.c **** 
  81:Core/Src/system_stm32wbxx.c **** /** @addtogroup stm32WBxx_System_Private_Includes
  82:Core/Src/system_stm32wbxx.c ****   * @{
  83:Core/Src/system_stm32wbxx.c ****   */
  84:Core/Src/system_stm32wbxx.c **** 
  85:Core/Src/system_stm32wbxx.c **** #include "stm32wbxx.h"
  86:Core/Src/system_stm32wbxx.c **** 
  87:Core/Src/system_stm32wbxx.c **** #if !defined  (HSE_VALUE)
  88:Core/Src/system_stm32wbxx.c ****   #define HSE_VALUE    (32000000UL) /*!< Value of the External oscillator in Hz */
  89:Core/Src/system_stm32wbxx.c **** #endif /* HSE_VALUE */
  90:Core/Src/system_stm32wbxx.c **** 
  91:Core/Src/system_stm32wbxx.c **** #if !defined  (MSI_VALUE)
  92:Core/Src/system_stm32wbxx.c ****    #define MSI_VALUE    (4000000UL) /*!< Value of the Internal oscillator in Hz*/
  93:Core/Src/system_stm32wbxx.c **** #endif /* MSI_VALUE */
  94:Core/Src/system_stm32wbxx.c **** 
  95:Core/Src/system_stm32wbxx.c **** #if !defined  (HSI_VALUE)
  96:Core/Src/system_stm32wbxx.c ****   #define HSI_VALUE    (16000000UL) /*!< Value of the Internal oscillator in Hz*/
  97:Core/Src/system_stm32wbxx.c **** #endif /* HSI_VALUE */
  98:Core/Src/system_stm32wbxx.c **** 
  99:Core/Src/system_stm32wbxx.c **** #if !defined  (LSI_VALUE) 
 100:Core/Src/system_stm32wbxx.c ****  #define LSI_VALUE  (32000UL)       /*!< Value of LSI in Hz*/
 101:Core/Src/system_stm32wbxx.c **** #endif /* LSI_VALUE */ 
 102:Core/Src/system_stm32wbxx.c **** 
 103:Core/Src/system_stm32wbxx.c **** #if !defined  (LSE_VALUE)
 104:Core/Src/system_stm32wbxx.c ****   #define LSE_VALUE    (32768UL)    /*!< Value of LSE in Hz*/
 105:Core/Src/system_stm32wbxx.c **** #endif /* LSE_VALUE */
 106:Core/Src/system_stm32wbxx.c **** 
 107:Core/Src/system_stm32wbxx.c **** /**
 108:Core/Src/system_stm32wbxx.c ****   * @}
 109:Core/Src/system_stm32wbxx.c ****   */
 110:Core/Src/system_stm32wbxx.c **** 
 111:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_TypesDefinitions
 112:Core/Src/system_stm32wbxx.c ****   * @{
 113:Core/Src/system_stm32wbxx.c ****   */
 114:Core/Src/system_stm32wbxx.c **** 
 115:Core/Src/system_stm32wbxx.c **** /**
 116:Core/Src/system_stm32wbxx.c ****   * @}
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 5


 117:Core/Src/system_stm32wbxx.c ****   */
 118:Core/Src/system_stm32wbxx.c **** 
 119:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_Defines
 120:Core/Src/system_stm32wbxx.c ****   * @{
 121:Core/Src/system_stm32wbxx.c ****   */
 122:Core/Src/system_stm32wbxx.c **** 
 123:Core/Src/system_stm32wbxx.c **** /* Note: Following vector table addresses must be defined in line with linker
 124:Core/Src/system_stm32wbxx.c ****          configuration. */
 125:Core/Src/system_stm32wbxx.c **** /*!< Uncomment the following line if you need to relocate CPU1 CM4 and/or CPU2
 126:Core/Src/system_stm32wbxx.c ****      CM0+ vector table anywhere in Sram or Flash. Else vector table will be kept
 127:Core/Src/system_stm32wbxx.c ****      at address 0x00 which correspond to automatic remap of boot address selected */
 128:Core/Src/system_stm32wbxx.c **** /* #define USER_VECT_TAB_ADDRESS */
 129:Core/Src/system_stm32wbxx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 130:Core/Src/system_stm32wbxx.c ****  /*!< Uncomment this line for user vector table remap in Sram else user remap
 131:Core/Src/system_stm32wbxx.c ****       will be done in Flash. */
 132:Core/Src/system_stm32wbxx.c **** /* #define VECT_TAB_SRAM */
 133:Core/Src/system_stm32wbxx.c **** #if defined(VECT_TAB_SRAM)
 134:Core/Src/system_stm32wbxx.c **** #define VECT_TAB_BASE_ADDRESS   SRAM1_BASE      /*!< Vector Table base address field.
 135:Core/Src/system_stm32wbxx.c ****                                                      This value must be a multiple of 0x200. */
 136:Core/Src/system_stm32wbxx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 137:Core/Src/system_stm32wbxx.c ****                                                      This value must be a multiple of 0x200. */
 138:Core/Src/system_stm32wbxx.c **** #else
 139:Core/Src/system_stm32wbxx.c **** #define VECT_TAB_BASE_ADDRESS   FLASH_BASE      /*!< Vector Table base address field.
 140:Core/Src/system_stm32wbxx.c ****                                                      This value must be a multiple of 0x200. */
 141:Core/Src/system_stm32wbxx.c **** #define VECT_TAB_OFFSET         0x00000000U     /*!< Vector Table base offset field.
 142:Core/Src/system_stm32wbxx.c ****                                                      This value must be a multiple of 0x200. */
 143:Core/Src/system_stm32wbxx.c **** #endif
 144:Core/Src/system_stm32wbxx.c **** #endif
 145:Core/Src/system_stm32wbxx.c **** 
 146:Core/Src/system_stm32wbxx.c **** /**
 147:Core/Src/system_stm32wbxx.c ****   * @}
 148:Core/Src/system_stm32wbxx.c ****   */
 149:Core/Src/system_stm32wbxx.c **** 
 150:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_Macros
 151:Core/Src/system_stm32wbxx.c ****   * @{
 152:Core/Src/system_stm32wbxx.c ****   */
 153:Core/Src/system_stm32wbxx.c **** 
 154:Core/Src/system_stm32wbxx.c **** /**
 155:Core/Src/system_stm32wbxx.c ****   * @}
 156:Core/Src/system_stm32wbxx.c ****   */
 157:Core/Src/system_stm32wbxx.c **** 
 158:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_Variables
 159:Core/Src/system_stm32wbxx.c ****   * @{
 160:Core/Src/system_stm32wbxx.c ****   */
 161:Core/Src/system_stm32wbxx.c ****   /* The SystemCoreClock variable is updated in three ways:
 162:Core/Src/system_stm32wbxx.c ****       1) by calling CMSIS function SystemCoreClockUpdate()
 163:Core/Src/system_stm32wbxx.c ****       2) by calling HAL API function HAL_RCC_GetHCLKFreq()
 164:Core/Src/system_stm32wbxx.c ****       3) each time HAL_RCC_ClockConfig() is called to configure the system clock frequency
 165:Core/Src/system_stm32wbxx.c ****          Note: If you use this function to configure the system clock; then there
 166:Core/Src/system_stm32wbxx.c ****                is no need to call the 2 first functions listed above, since SystemCoreClock
 167:Core/Src/system_stm32wbxx.c ****                variable is updated automatically.
 168:Core/Src/system_stm32wbxx.c ****   */
 169:Core/Src/system_stm32wbxx.c ****   uint32_t SystemCoreClock  = 4000000UL ; /*CPU1: M4 on MSI clock after startup (4MHz)*/
 170:Core/Src/system_stm32wbxx.c **** 
 171:Core/Src/system_stm32wbxx.c ****   const uint32_t AHBPrescTable[16UL] = {1UL, 3UL, 5UL, 1UL, 1UL, 6UL, 10UL, 32UL, 2UL, 4UL, 8UL, 16
 172:Core/Src/system_stm32wbxx.c **** 
 173:Core/Src/system_stm32wbxx.c ****   const uint32_t APBPrescTable[8UL]  = {0UL, 0UL, 0UL, 0UL, 1UL, 2UL, 3UL, 4UL};
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 6


 174:Core/Src/system_stm32wbxx.c **** 
 175:Core/Src/system_stm32wbxx.c ****   const uint32_t MSIRangeTable[16UL] = {100000UL, 200000UL, 400000UL, 800000UL, 1000000UL, 2000000U
 176:Core/Src/system_stm32wbxx.c ****                                       4000000UL, 8000000UL, 16000000UL, 24000000UL, 32000000UL, 480
 177:Core/Src/system_stm32wbxx.c **** 
 178:Core/Src/system_stm32wbxx.c **** #if defined(STM32WB55xx) || defined(STM32WB5Mxx) || defined(STM32WB35xx) || defined (STM32WB15xx)
 179:Core/Src/system_stm32wbxx.c ****   const uint32_t SmpsPrescalerTable[4UL][6UL]={{1UL,3UL,2UL,2UL,1UL,2UL}, \
 180:Core/Src/system_stm32wbxx.c ****                                         {2UL,6UL,4UL,3UL,2UL,4UL}, \
 181:Core/Src/system_stm32wbxx.c ****                                         {4UL,12UL,8UL,6UL,4UL,8UL}, \
 182:Core/Src/system_stm32wbxx.c ****                                         {4UL,12UL,8UL,6UL,4UL,8UL}};
 183:Core/Src/system_stm32wbxx.c **** #endif
 184:Core/Src/system_stm32wbxx.c **** 
 185:Core/Src/system_stm32wbxx.c **** /**
 186:Core/Src/system_stm32wbxx.c ****   * @}
 187:Core/Src/system_stm32wbxx.c ****   */
 188:Core/Src/system_stm32wbxx.c **** 
 189:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_FunctionPrototypes
 190:Core/Src/system_stm32wbxx.c ****   * @{
 191:Core/Src/system_stm32wbxx.c ****   */
 192:Core/Src/system_stm32wbxx.c **** 
 193:Core/Src/system_stm32wbxx.c **** /**
 194:Core/Src/system_stm32wbxx.c ****   * @}
 195:Core/Src/system_stm32wbxx.c ****   */
 196:Core/Src/system_stm32wbxx.c **** 
 197:Core/Src/system_stm32wbxx.c **** /** @addtogroup STM32WBxx_System_Private_Functions
 198:Core/Src/system_stm32wbxx.c ****   * @{
 199:Core/Src/system_stm32wbxx.c ****   */
 200:Core/Src/system_stm32wbxx.c **** 
 201:Core/Src/system_stm32wbxx.c **** /**
 202:Core/Src/system_stm32wbxx.c ****   * @brief  Setup the microcontroller system.
 203:Core/Src/system_stm32wbxx.c ****   * @param  None
 204:Core/Src/system_stm32wbxx.c ****   * @retval None
 205:Core/Src/system_stm32wbxx.c ****   */
 206:Core/Src/system_stm32wbxx.c **** void SystemInit(void)
 207:Core/Src/system_stm32wbxx.c **** {
 124              		.loc 1 207 1
 125              		.cfi_startproc
 126              		@ args = 0, pretend = 0, frame = 0
 127              		@ frame_needed = 1, uses_anonymous_args = 0
 128              		@ link register save eliminated.
 129 0000 80B4     		push	{r7}
 130              	.LCFI0:
 131              		.cfi_def_cfa_offset 4
 132              		.cfi_offset 7, -4
 133 0002 00AF     		add	r7, sp, #0
 134              	.LCFI1:
 135              		.cfi_def_cfa_register 7
 208:Core/Src/system_stm32wbxx.c **** #if defined(USER_VECT_TAB_ADDRESS)
 209:Core/Src/system_stm32wbxx.c ****   /* Configure the Vector Table location add offset address ------------------*/
 210:Core/Src/system_stm32wbxx.c ****   SCB->VTOR = VECT_TAB_BASE_ADDRESS | VECT_TAB_OFFSET;
 211:Core/Src/system_stm32wbxx.c **** #endif
 212:Core/Src/system_stm32wbxx.c **** 
 213:Core/Src/system_stm32wbxx.c ****   /* FPU settings ------------------------------------------------------------*/
 214:Core/Src/system_stm32wbxx.c ****   #if (__FPU_PRESENT == 1) && (__FPU_USED == 1)
 215:Core/Src/system_stm32wbxx.c ****     SCB->CPACR |= ((3UL << (10UL*2UL))|(3UL << (11UL*2UL)));  /* set CP10 and CP11 Full Access */
 136              		.loc 1 215 16
 137 0004 244B     		ldr	r3, .L2
 138 0006 D3F88830 		ldr	r3, [r3, #136]
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 7


 139 000a 234A     		ldr	r2, .L2
 140 000c 43F47003 		orr	r3, r3, #15728640
 141 0010 C2F88830 		str	r3, [r2, #136]
 216:Core/Src/system_stm32wbxx.c ****   #endif
 217:Core/Src/system_stm32wbxx.c ****   
 218:Core/Src/system_stm32wbxx.c ****   /* Reset the RCC clock configuration to the default reset state ------------*/
 219:Core/Src/system_stm32wbxx.c ****   /* Set MSION bit */
 220:Core/Src/system_stm32wbxx.c ****   RCC->CR |= RCC_CR_MSION;
 142              		.loc 1 220 11
 143 0014 4FF0B043 		mov	r3, #1476395008
 144 0018 1B68     		ldr	r3, [r3]
 145 001a 4FF0B042 		mov	r2, #1476395008
 146 001e 43F00103 		orr	r3, r3, #1
 147 0022 1360     		str	r3, [r2]
 221:Core/Src/system_stm32wbxx.c **** 
 222:Core/Src/system_stm32wbxx.c ****   /* Reset CFGR register */
 223:Core/Src/system_stm32wbxx.c ****   RCC->CFGR = 0x00070000U;
 148              		.loc 1 223 6
 149 0024 4FF0B043 		mov	r3, #1476395008
 150              		.loc 1 223 13
 151 0028 4FF4E022 		mov	r2, #458752
 152 002c 9A60     		str	r2, [r3, #8]
 224:Core/Src/system_stm32wbxx.c **** 
 225:Core/Src/system_stm32wbxx.c ****   /* Reset PLLSAI1ON, PLLON, HSECSSON, HSEON, HSION, and MSIPLLON bits */
 226:Core/Src/system_stm32wbxx.c ****   RCC->CR &= (uint32_t)0xFAF6FEFBU;
 153              		.loc 1 226 11
 154 002e 4FF0B043 		mov	r3, #1476395008
 155 0032 1A68     		ldr	r2, [r3]
 156 0034 4FF0B041 		mov	r1, #1476395008
 157 0038 184B     		ldr	r3, .L2+4
 158 003a 1340     		ands	r3, r3, r2
 159 003c 0B60     		str	r3, [r1]
 227:Core/Src/system_stm32wbxx.c **** 
 228:Core/Src/system_stm32wbxx.c ****   /*!< Reset LSI1 and LSI2 bits */
 229:Core/Src/system_stm32wbxx.c ****   RCC->CSR &= (uint32_t)0xFFFFFFFAU;
 160              		.loc 1 229 12
 161 003e 4FF0B043 		mov	r3, #1476395008
 162 0042 D3F89430 		ldr	r3, [r3, #148]
 163 0046 4FF0B042 		mov	r2, #1476395008
 164 004a 23F00503 		bic	r3, r3, #5
 165 004e C2F89430 		str	r3, [r2, #148]
 230:Core/Src/system_stm32wbxx.c ****   
 231:Core/Src/system_stm32wbxx.c ****   /*!< Reset HSI48ON  bit */
 232:Core/Src/system_stm32wbxx.c ****   RCC->CRRCR &= (uint32_t)0xFFFFFFFEU;
 166              		.loc 1 232 14
 167 0052 4FF0B043 		mov	r3, #1476395008
 168 0056 D3F89830 		ldr	r3, [r3, #152]
 169 005a 4FF0B042 		mov	r2, #1476395008
 170 005e 23F00103 		bic	r3, r3, #1
 171 0062 C2F89830 		str	r3, [r2, #152]
 233:Core/Src/system_stm32wbxx.c ****     
 234:Core/Src/system_stm32wbxx.c ****   /* Reset PLLCFGR register */
 235:Core/Src/system_stm32wbxx.c ****   RCC->PLLCFGR = 0x22041000U;
 172              		.loc 1 235 6
 173 0066 4FF0B043 		mov	r3, #1476395008
 174              		.loc 1 235 16
 175 006a 0D4A     		ldr	r2, .L2+8
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 8


 176 006c DA60     		str	r2, [r3, #12]
 236:Core/Src/system_stm32wbxx.c **** 
 237:Core/Src/system_stm32wbxx.c **** #if defined(STM32WB55xx) || defined(STM32WB5Mxx)
 238:Core/Src/system_stm32wbxx.c ****   /* Reset PLLSAI1CFGR register */
 239:Core/Src/system_stm32wbxx.c ****   RCC->PLLSAI1CFGR = 0x22041000U;
 177              		.loc 1 239 6
 178 006e 4FF0B043 		mov	r3, #1476395008
 179              		.loc 1 239 20
 180 0072 0B4A     		ldr	r2, .L2+8
 181 0074 1A61     		str	r2, [r3, #16]
 240:Core/Src/system_stm32wbxx.c **** #endif
 241:Core/Src/system_stm32wbxx.c ****   
 242:Core/Src/system_stm32wbxx.c ****   /* Reset HSEBYP bit */
 243:Core/Src/system_stm32wbxx.c ****   RCC->CR &= 0xFFFBFFFFU;
 182              		.loc 1 243 11
 183 0076 4FF0B043 		mov	r3, #1476395008
 184 007a 1B68     		ldr	r3, [r3]
 185 007c 4FF0B042 		mov	r2, #1476395008
 186 0080 23F48023 		bic	r3, r3, #262144
 187 0084 1360     		str	r3, [r2]
 244:Core/Src/system_stm32wbxx.c **** 
 245:Core/Src/system_stm32wbxx.c ****   /* Disable all interrupts */
 246:Core/Src/system_stm32wbxx.c ****   RCC->CIER = 0x00000000;
 188              		.loc 1 246 6
 189 0086 4FF0B043 		mov	r3, #1476395008
 190              		.loc 1 246 13
 191 008a 0022     		movs	r2, #0
 192 008c 9A61     		str	r2, [r3, #24]
 247:Core/Src/system_stm32wbxx.c **** }
 193              		.loc 1 247 1
 194 008e 00BF     		nop
 195 0090 BD46     		mov	sp, r7
 196              	.LCFI2:
 197              		.cfi_def_cfa_register 13
 198              		@ sp needed
 199 0092 5DF8047B 		ldr	r7, [sp], #4
 200              	.LCFI3:
 201              		.cfi_restore 7
 202              		.cfi_def_cfa_offset 0
 203 0096 7047     		bx	lr
 204              	.L3:
 205              		.align	2
 206              	.L2:
 207 0098 00ED00E0 		.word	-536810240
 208 009c FBFEF6FA 		.word	-84476165
 209 00a0 00100422 		.word	570691584
 210              		.cfi_endproc
 211              	.LFE132:
 213              		.section	.text.SystemCoreClockUpdate,"ax",%progbits
 214              		.align	1
 215              		.global	SystemCoreClockUpdate
 216              		.syntax unified
 217              		.thumb
 218              		.thumb_func
 220              	SystemCoreClockUpdate:
 221              	.LFB133:
 248:Core/Src/system_stm32wbxx.c **** 
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 9


 249:Core/Src/system_stm32wbxx.c **** /**
 250:Core/Src/system_stm32wbxx.c ****   * @brief  Update SystemCoreClock variable according to Clock Register Values.
 251:Core/Src/system_stm32wbxx.c ****   *         The SystemCoreClock variable contains the core clock (HCLK), it can
 252:Core/Src/system_stm32wbxx.c ****   *         be used by the user application to setup the SysTick timer or configure
 253:Core/Src/system_stm32wbxx.c ****   *         other parameters.
 254:Core/Src/system_stm32wbxx.c ****   *
 255:Core/Src/system_stm32wbxx.c ****   * @note   Each time the core clock (HCLK) changes, this function must be called
 256:Core/Src/system_stm32wbxx.c ****   *         to update SystemCoreClock variable value. Otherwise, any configuration
 257:Core/Src/system_stm32wbxx.c ****   *         based on this variable will be incorrect.
 258:Core/Src/system_stm32wbxx.c ****   *
 259:Core/Src/system_stm32wbxx.c ****   * @note   - The system frequency computed by this function is not the real
 260:Core/Src/system_stm32wbxx.c ****   *           frequency in the chip. It is calculated based on the predefined
 261:Core/Src/system_stm32wbxx.c ****   *           constant and the selected clock source:
 262:Core/Src/system_stm32wbxx.c ****   *
 263:Core/Src/system_stm32wbxx.c ****   *           - If SYSCLK source is MSI, SystemCoreClock will contain the MSI_VALUE(*)
 264:Core/Src/system_stm32wbxx.c ****   *
 265:Core/Src/system_stm32wbxx.c ****   *           - If SYSCLK source is HSI, SystemCoreClock will contain the HSI_VALUE(**)
 266:Core/Src/system_stm32wbxx.c ****   *
 267:Core/Src/system_stm32wbxx.c ****   *           - If SYSCLK source is HSE, SystemCoreClock will contain the HSE_VALUE(***)
 268:Core/Src/system_stm32wbxx.c ****   *
 269:Core/Src/system_stm32wbxx.c ****   *           - If SYSCLK source is PLL, SystemCoreClock will contain the HSE_VALUE(***)
 270:Core/Src/system_stm32wbxx.c ****   *             or HSI_VALUE(*) or MSI_VALUE(*) multiplied/divided by the PLL factors.
 271:Core/Src/system_stm32wbxx.c ****   *
 272:Core/Src/system_stm32wbxx.c ****   *         (*) MSI_VALUE is a constant defined in stm32wbxx_hal.h file (default value
 273:Core/Src/system_stm32wbxx.c ****   *             4 MHz) but the real value may vary depending on the variations
 274:Core/Src/system_stm32wbxx.c ****   *             in voltage and temperature.
 275:Core/Src/system_stm32wbxx.c ****   *
 276:Core/Src/system_stm32wbxx.c ****   *         (**) HSI_VALUE is a constant defined in stm32wbxx_hal_conf.h file (default value
 277:Core/Src/system_stm32wbxx.c ****   *              16 MHz) but the real value may vary depending on the variations
 278:Core/Src/system_stm32wbxx.c ****   *              in voltage and temperature.
 279:Core/Src/system_stm32wbxx.c ****   *
 280:Core/Src/system_stm32wbxx.c ****   *         (***) HSE_VALUE is a constant defined in stm32wbxx_hal_conf.h file (default value
 281:Core/Src/system_stm32wbxx.c ****   *              32 MHz), user has to ensure that HSE_VALUE is same as the real
 282:Core/Src/system_stm32wbxx.c ****   *              frequency of the crystal used. Otherwise, this function may
 283:Core/Src/system_stm32wbxx.c ****   *              have wrong result.
 284:Core/Src/system_stm32wbxx.c ****   *
 285:Core/Src/system_stm32wbxx.c ****   *         - The result of this function could be not correct when using fractional
 286:Core/Src/system_stm32wbxx.c ****   *           value for HSE crystal.
 287:Core/Src/system_stm32wbxx.c ****   *
 288:Core/Src/system_stm32wbxx.c ****   * @param  None
 289:Core/Src/system_stm32wbxx.c ****   * @retval None
 290:Core/Src/system_stm32wbxx.c ****   */
 291:Core/Src/system_stm32wbxx.c **** void SystemCoreClockUpdate(void)
 292:Core/Src/system_stm32wbxx.c **** {
 222              		.loc 1 292 1
 223              		.cfi_startproc
 224              		@ args = 0, pretend = 0, frame = 24
 225              		@ frame_needed = 1, uses_anonymous_args = 0
 226              		@ link register save eliminated.
 227 0000 80B4     		push	{r7}
 228              	.LCFI4:
 229              		.cfi_def_cfa_offset 4
 230              		.cfi_offset 7, -4
 231 0002 87B0     		sub	sp, sp, #28
 232              	.LCFI5:
 233              		.cfi_def_cfa_offset 32
 234 0004 00AF     		add	r7, sp, #0
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 10


 235              	.LCFI6:
 236              		.cfi_def_cfa_register 7
 293:Core/Src/system_stm32wbxx.c ****   uint32_t tmp, msirange, pllvco, pllr, pllsource , pllm;
 294:Core/Src/system_stm32wbxx.c **** 
 295:Core/Src/system_stm32wbxx.c ****   /* Get MSI Range frequency--------------------------------------------------*/
 296:Core/Src/system_stm32wbxx.c **** 
 297:Core/Src/system_stm32wbxx.c ****   /*MSI frequency range in Hz*/
 298:Core/Src/system_stm32wbxx.c ****   msirange = MSIRangeTable[(RCC->CR & RCC_CR_MSIRANGE) >> RCC_CR_MSIRANGE_Pos];
 237              		.loc 1 298 32
 238 0006 4FF0B043 		mov	r3, #1476395008
 239 000a 1B68     		ldr	r3, [r3]
 240              		.loc 1 298 56
 241 000c 1B09     		lsrs	r3, r3, #4
 242 000e 03F00F03 		and	r3, r3, #15
 243              		.loc 1 298 12
 244 0012 474A     		ldr	r2, .L15
 245 0014 52F82330 		ldr	r3, [r2, r3, lsl #2]
 246 0018 3B61     		str	r3, [r7, #16]
 299:Core/Src/system_stm32wbxx.c **** 
 300:Core/Src/system_stm32wbxx.c ****   /* Get SYSCLK source -------------------------------------------------------*/
 301:Core/Src/system_stm32wbxx.c ****   switch (RCC->CFGR & RCC_CFGR_SWS)
 247              		.loc 1 301 14
 248 001a 4FF0B043 		mov	r3, #1476395008
 249 001e 9B68     		ldr	r3, [r3, #8]
 250              		.loc 1 301 21
 251 0020 03F00C03 		and	r3, r3, #12
 252              		.loc 1 301 3
 253 0024 0C2B     		cmp	r3, #12
 254 0026 67D8     		bhi	.L5
 255 0028 01A2     		adr	r2, .L7
 256 002a 52F823F0 		ldr	pc, [r2, r3, lsl #2]
 257 002e 00BF     		.p2align 2
 258              	.L7:
 259 0030 65000000 		.word	.L10+1
 260 0034 F9000000 		.word	.L5+1
 261 0038 F9000000 		.word	.L5+1
 262 003c F9000000 		.word	.L5+1
 263 0040 6D000000 		.word	.L9+1
 264 0044 F9000000 		.word	.L5+1
 265 0048 F9000000 		.word	.L5+1
 266 004c F9000000 		.word	.L5+1
 267 0050 75000000 		.word	.L8+1
 268 0054 F9000000 		.word	.L5+1
 269 0058 F9000000 		.word	.L5+1
 270 005c F9000000 		.word	.L5+1
 271 0060 7D000000 		.word	.L6+1
 272              		.p2align 1
 273              	.L10:
 302:Core/Src/system_stm32wbxx.c ****   {
 303:Core/Src/system_stm32wbxx.c ****     case 0x00:   /* MSI used as system clock source */
 304:Core/Src/system_stm32wbxx.c ****       SystemCoreClock = msirange;
 274              		.loc 1 304 23
 275 0064 334A     		ldr	r2, .L15+4
 276 0066 3B69     		ldr	r3, [r7, #16]
 277 0068 1360     		str	r3, [r2]
 305:Core/Src/system_stm32wbxx.c ****       break;
 278              		.loc 1 305 7
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 11


 279 006a 49E0     		b	.L11
 280              	.L9:
 306:Core/Src/system_stm32wbxx.c **** 
 307:Core/Src/system_stm32wbxx.c ****     case 0x04:  /* HSI used as system clock source */
 308:Core/Src/system_stm32wbxx.c ****       /* HSI used as system clock source */
 309:Core/Src/system_stm32wbxx.c ****         SystemCoreClock = HSI_VALUE;
 281              		.loc 1 309 25
 282 006c 314B     		ldr	r3, .L15+4
 283 006e 324A     		ldr	r2, .L15+8
 284 0070 1A60     		str	r2, [r3]
 310:Core/Src/system_stm32wbxx.c ****       break;
 285              		.loc 1 310 7
 286 0072 45E0     		b	.L11
 287              	.L8:
 311:Core/Src/system_stm32wbxx.c **** 
 312:Core/Src/system_stm32wbxx.c ****     case 0x08:  /* HSE used as system clock source */
 313:Core/Src/system_stm32wbxx.c ****       SystemCoreClock = HSE_VALUE;
 288              		.loc 1 313 23
 289 0074 2F4B     		ldr	r3, .L15+4
 290 0076 314A     		ldr	r2, .L15+12
 291 0078 1A60     		str	r2, [r3]
 314:Core/Src/system_stm32wbxx.c ****       break;
 292              		.loc 1 314 7
 293 007a 41E0     		b	.L11
 294              	.L6:
 315:Core/Src/system_stm32wbxx.c **** 
 316:Core/Src/system_stm32wbxx.c ****     case 0x0C: /* PLL used as system clock  source */
 317:Core/Src/system_stm32wbxx.c ****       /* PLL_VCO = (HSE_VALUE or HSI_VALUE or MSI_VALUE/ PLLM) * PLLN
 318:Core/Src/system_stm32wbxx.c ****          SYSCLK = PLL_VCO / PLLR
 319:Core/Src/system_stm32wbxx.c ****          */
 320:Core/Src/system_stm32wbxx.c ****       pllsource = (RCC->PLLCFGR & RCC_PLLCFGR_PLLSRC);
 295              		.loc 1 320 23
 296 007c 4FF0B043 		mov	r3, #1476395008
 297 0080 DB68     		ldr	r3, [r3, #12]
 298              		.loc 1 320 17
 299 0082 03F00303 		and	r3, r3, #3
 300 0086 FB60     		str	r3, [r7, #12]
 321:Core/Src/system_stm32wbxx.c ****       pllm = ((RCC->PLLCFGR & RCC_PLLCFGR_PLLM) >> RCC_PLLCFGR_PLLM_Pos) + 1UL ;
 301              		.loc 1 321 19
 302 0088 4FF0B043 		mov	r3, #1476395008
 303 008c DB68     		ldr	r3, [r3, #12]
 304              		.loc 1 321 49
 305 008e 1B09     		lsrs	r3, r3, #4
 306 0090 03F00703 		and	r3, r3, #7
 307              		.loc 1 321 12
 308 0094 0133     		adds	r3, r3, #1
 309 0096 BB60     		str	r3, [r7, #8]
 322:Core/Src/system_stm32wbxx.c **** 
 323:Core/Src/system_stm32wbxx.c ****       if(pllsource == 0x02UL) /* HSI used as PLL clock source */
 310              		.loc 1 323 9
 311 0098 FB68     		ldr	r3, [r7, #12]
 312 009a 022B     		cmp	r3, #2
 313 009c 05D1     		bne	.L12
 324:Core/Src/system_stm32wbxx.c ****       {
 325:Core/Src/system_stm32wbxx.c ****         pllvco = (HSI_VALUE / pllm);
 314              		.loc 1 325 16
 315 009e 264A     		ldr	r2, .L15+8
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 12


 316 00a0 BB68     		ldr	r3, [r7, #8]
 317 00a2 B2FBF3F3 		udiv	r3, r2, r3
 318 00a6 7B61     		str	r3, [r7, #20]
 319 00a8 0DE0     		b	.L13
 320              	.L12:
 326:Core/Src/system_stm32wbxx.c ****       }
 327:Core/Src/system_stm32wbxx.c ****       else if(pllsource == 0x03UL) /* HSE used as PLL clock source */
 321              		.loc 1 327 14
 322 00aa FB68     		ldr	r3, [r7, #12]
 323 00ac 032B     		cmp	r3, #3
 324 00ae 05D1     		bne	.L14
 328:Core/Src/system_stm32wbxx.c ****       {
 329:Core/Src/system_stm32wbxx.c ****         pllvco = (HSE_VALUE / pllm);
 325              		.loc 1 329 16
 326 00b0 224A     		ldr	r2, .L15+12
 327 00b2 BB68     		ldr	r3, [r7, #8]
 328 00b4 B2FBF3F3 		udiv	r3, r2, r3
 329 00b8 7B61     		str	r3, [r7, #20]
 330 00ba 04E0     		b	.L13
 331              	.L14:
 330:Core/Src/system_stm32wbxx.c ****       }
 331:Core/Src/system_stm32wbxx.c ****       else /* MSI used as PLL clock source */
 332:Core/Src/system_stm32wbxx.c ****       {
 333:Core/Src/system_stm32wbxx.c ****         pllvco = (msirange / pllm);
 332              		.loc 1 333 16
 333 00bc 3A69     		ldr	r2, [r7, #16]
 334 00be BB68     		ldr	r3, [r7, #8]
 335 00c0 B2FBF3F3 		udiv	r3, r2, r3
 336 00c4 7B61     		str	r3, [r7, #20]
 337              	.L13:
 334:Core/Src/system_stm32wbxx.c ****       }
 335:Core/Src/system_stm32wbxx.c ****       
 336:Core/Src/system_stm32wbxx.c ****       pllvco = pllvco * ((RCC->PLLCFGR & RCC_PLLCFGR_PLLN) >> RCC_PLLCFGR_PLLN_Pos);
 338              		.loc 1 336 30
 339 00c6 4FF0B043 		mov	r3, #1476395008
 340 00ca DB68     		ldr	r3, [r3, #12]
 341              		.loc 1 336 60
 342 00cc 1B0A     		lsrs	r3, r3, #8
 343 00ce 03F07F02 		and	r2, r3, #127
 344              		.loc 1 336 14
 345 00d2 7B69     		ldr	r3, [r7, #20]
 346 00d4 02FB03F3 		mul	r3, r2, r3
 347 00d8 7B61     		str	r3, [r7, #20]
 337:Core/Src/system_stm32wbxx.c ****       pllr = (((RCC->PLLCFGR & RCC_PLLCFGR_PLLR) >> RCC_PLLCFGR_PLLR_Pos) + 1UL);
 348              		.loc 1 337 20
 349 00da 4FF0B043 		mov	r3, #1476395008
 350 00de DB68     		ldr	r3, [r3, #12]
 351              		.loc 1 337 50
 352 00e0 5B0F     		lsrs	r3, r3, #29
 353 00e2 03F00703 		and	r3, r3, #7
 354              		.loc 1 337 12
 355 00e6 0133     		adds	r3, r3, #1
 356 00e8 7B60     		str	r3, [r7, #4]
 338:Core/Src/system_stm32wbxx.c ****       
 339:Core/Src/system_stm32wbxx.c ****       SystemCoreClock = pllvco/pllr;
 357              		.loc 1 339 31
 358 00ea 7A69     		ldr	r2, [r7, #20]
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 13


 359 00ec 7B68     		ldr	r3, [r7, #4]
 360 00ee B2FBF3F3 		udiv	r3, r2, r3
 361              		.loc 1 339 23
 362 00f2 104A     		ldr	r2, .L15+4
 363 00f4 1360     		str	r3, [r2]
 340:Core/Src/system_stm32wbxx.c ****       break;
 364              		.loc 1 340 7
 365 00f6 03E0     		b	.L11
 366              	.L5:
 341:Core/Src/system_stm32wbxx.c **** 
 342:Core/Src/system_stm32wbxx.c ****     default:
 343:Core/Src/system_stm32wbxx.c ****       SystemCoreClock = msirange;
 367              		.loc 1 343 23
 368 00f8 0E4A     		ldr	r2, .L15+4
 369 00fa 3B69     		ldr	r3, [r7, #16]
 370 00fc 1360     		str	r3, [r2]
 344:Core/Src/system_stm32wbxx.c ****       break;
 371              		.loc 1 344 7
 372 00fe 00BF     		nop
 373              	.L11:
 345:Core/Src/system_stm32wbxx.c ****   }
 346:Core/Src/system_stm32wbxx.c ****   
 347:Core/Src/system_stm32wbxx.c ****   /* Compute HCLK clock frequency --------------------------------------------*/
 348:Core/Src/system_stm32wbxx.c ****   /* Get HCLK1 prescaler */
 349:Core/Src/system_stm32wbxx.c ****   tmp = AHBPrescTable[((RCC->CFGR & RCC_CFGR_HPRE) >> RCC_CFGR_HPRE_Pos)];
 374              		.loc 1 349 28
 375 0100 4FF0B043 		mov	r3, #1476395008
 376 0104 9B68     		ldr	r3, [r3, #8]
 377              		.loc 1 349 52
 378 0106 1B09     		lsrs	r3, r3, #4
 379 0108 03F00F03 		and	r3, r3, #15
 380              		.loc 1 349 7
 381 010c 0C4A     		ldr	r2, .L15+16
 382 010e 52F82330 		ldr	r3, [r2, r3, lsl #2]
 383 0112 3B60     		str	r3, [r7]
 350:Core/Src/system_stm32wbxx.c ****   /* HCLK clock frequency */
 351:Core/Src/system_stm32wbxx.c ****   SystemCoreClock = SystemCoreClock / tmp;
 384              		.loc 1 351 37
 385 0114 074B     		ldr	r3, .L15+4
 386 0116 1A68     		ldr	r2, [r3]
 387 0118 3B68     		ldr	r3, [r7]
 388 011a B2FBF3F3 		udiv	r3, r2, r3
 389              		.loc 1 351 19
 390 011e 054A     		ldr	r2, .L15+4
 391 0120 1360     		str	r3, [r2]
 352:Core/Src/system_stm32wbxx.c **** 
 353:Core/Src/system_stm32wbxx.c **** }
 392              		.loc 1 353 1
 393 0122 00BF     		nop
 394 0124 1C37     		adds	r7, r7, #28
 395              	.LCFI7:
 396              		.cfi_def_cfa_offset 4
 397 0126 BD46     		mov	sp, r7
 398              	.LCFI8:
 399              		.cfi_def_cfa_register 13
 400              		@ sp needed
 401 0128 5DF8047B 		ldr	r7, [sp], #4
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 14


 402              	.LCFI9:
 403              		.cfi_restore 7
 404              		.cfi_def_cfa_offset 0
 405 012c 7047     		bx	lr
 406              	.L16:
 407 012e 00BF     		.align	2
 408              	.L15:
 409 0130 00000000 		.word	MSIRangeTable
 410 0134 00000000 		.word	SystemCoreClock
 411 0138 0024F400 		.word	16000000
 412 013c 0048E801 		.word	32000000
 413 0140 00000000 		.word	AHBPrescTable
 414              		.cfi_endproc
 415              	.LFE133:
 417              		.text
 418              	.Letext0:
 419              		.file 2 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 420              		.file 3 "c:\\program files (x86)\\gnu arm embedded toolchain\\10 2021.10\\arm-none-eabi\\include\\
 421              		.file 4 "Drivers/CMSIS/Core/Include/core_cm4.h"
 422              		.file 5 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/system_stm32wbxx.h"
 423              		.file 6 "Drivers/CMSIS/Device/ST/STM32WBxx/Include/stm32wb55xx.h"
ARM GAS  C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s 			page 15


DEFINED SYMBOLS
                            *ABS*:00000000 system_stm32wbxx.c
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:24     .data.SystemCoreClock:00000000 SystemCoreClock
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:21     .data.SystemCoreClock:00000000 $d
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:31     .rodata.AHBPrescTable:00000000 AHBPrescTable
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:28     .rodata.AHBPrescTable:00000000 $d
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:53     .rodata.APBPrescTable:00000000 APBPrescTable
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:50     .rodata.APBPrescTable:00000000 $d
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:67     .rodata.MSIRangeTable:00000000 MSIRangeTable
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:64     .rodata.MSIRangeTable:00000000 $d
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:89     .rodata.SmpsPrescalerTable:00000000 SmpsPrescalerTable
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:86     .rodata.SmpsPrescalerTable:00000000 $d
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:115    .text.SystemInit:00000000 $t
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:121    .text.SystemInit:00000000 SystemInit
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:207    .text.SystemInit:00000098 $d
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:214    .text.SystemCoreClockUpdate:00000000 $t
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:220    .text.SystemCoreClockUpdate:00000000 SystemCoreClockUpdate
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:259    .text.SystemCoreClockUpdate:00000030 $d
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:272    .text.SystemCoreClockUpdate:00000064 $t
C:\Users\zach_\AppData\Local\Temp\cckeRqwN.s:409    .text.SystemCoreClockUpdate:00000130 $d

NO UNDEFINED SYMBOLS
